services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: solar_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: solar_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d solar_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - solar_network

  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-solar_password}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-solar}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-solar-bucket}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-your-super-secret-auth-token}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      - solar_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://solar_user:solar_password@postgres:5432/solar_platform
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-your-super-secret-auth-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-solar}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-solar-bucket}
      - PYTHONUNBUFFERED=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend:/app
      - ./templates:/app/templates
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_started
    networks:
      - solar_network
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - solar_network
    restart: unless-stopped

volumes:
  postgres_data:
  influxdb_data:

networks:
  solar_network:
    driver: bridge
